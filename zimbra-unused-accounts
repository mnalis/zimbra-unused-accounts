#!/usr/bin/perl -T
# shows zimbra accounts which have not been used in some time
# by Matija Nalis <mnalis-perl@axe.tomsoft.hr> GPLv3+, started 20200429 


use strict;
use warnings;
use autodie qw/:all/;
# use "apt install libipc-system-simple-perl"

use Time::Local;

my $SKIP_NEVER = $ENV{SKIP_NEVER} || 1;			# if 1, skips all entries with "last logon" = "never"
my $DEFAULT_DOMAIN = $ENV{DEFAULT_DOMAIN} || undef;	# append default domain if it is missing in zpush
my $IGN_FILE = '/etc/zimbra-unused-accounts.ignore';	# ignore users listed in that file
my $DEBUG = $ENV{DEBUG} || 0;
my $CMD_ZMACCTS	= 'su -l zimbra -s /bin/bash -c "zmaccts"';
my $CMD_ZPUSH	= 'z-push-admin -a lastsync';

my $MAX_DAYS = $ARGV[0];
$ENV{PATH}='/usr/sbin:/usr/bin:/sbin:/bin';

#
# no user serviceable parts below
#

if (!defined $MAX_DAYS) {
	print STDERR "Usage: zimbra-unused-accounts <max_days>\n\n";
	print STDERR "find Zimbra accounts which have not been used for at least max_days\n";
	exit 1;
}

# returns unix epoch for zmaccts timestamp in format "02/20/13 10:34". Really, zimbra?? Y2Kbug forgotten already in 2005 ???
sub get_timestamp_zmaccts($$) {
	my ($date, $time) = @_;
	return 0 if $date eq 'never';
	my ($month, $day, $year) = split '/', $date;
	my ($hour, $min) = split ':', $time;
	return timelocal (0, $min, $hour, $day, $month-1, $year);
}
# returns unix epoch for zpush timestamp in format "2020-03-26 17:33". 
sub get_timestamp_zpush($$) {
	my ($date, $time) = @_;
	my ($year, $month, $day) = split '-', $date;
	my ($hour, $min) = split ':', $time;
	return timelocal (0, $min, $hour, $day, $month-1, $year);
}


my %IGN_USERS=();
#
# read config files, if they exists
#
eval {
	open my $ign_fd, '<', $IGN_FILE;
	while (<$ign_fd>) {
		chomp;
		next if /^\s*$/;
		next if /^\s*#/;
		$DEBUG > 1 && print "ignore user:\t$_\n";
		$IGN_USERS{$_}=1;
	}
};

my %USERS=();

#
# parse zmaccts logins
#

open my $zmaccts_fd, '-|', $CMD_ZMACCTS;
# looks like:
#
#            account                          status             created       last logon
# ------------------------------------   -----------     ---------------  ---------------
#desk@zimbra.example.com                      active      02/20/13 10:34   04/24/20 09:31
#user.name@zimbra.example.com                 active      02/17/20 13:28   04/19/20 12:05
#galsync@zimbra.example.com                   active      10/24/12 02:25            never
#[...]
#                                  domain summary

while (<$zmaccts_fd>) {
	last if /^\s*domain summary\s*$/;
	next if /^\s*$/;
	my ($account, $status, $created_date, $created_time, $last_date, $last_time) = split;
	next if $account eq 'account';
	next if $account =~ /^-+$/;
	# we have now skipped all useless headers
	next if $status eq 'locked';
	if ($SKIP_NEVER) { next if $last_date eq 'never' }

	my $timestamp = get_timestamp_zmaccts ($last_date, $last_time);
	my $localtime = localtime($timestamp);
	$DEBUG > 1 && print "zmaccts:\t$last_date $last_time ($timestamp = $localtime)\t$account\n";
	$USERS{$account} = $timestamp;
}
close $zmaccts_fd;

#
# parse z-push-admin logins
#

open my $zpush_fd, '-|', $CMD_ZPUSH;
# looks like:
#All known devices and users and their last synchronization time
#
#Device id                           Synchronized user              Last sync time                   Short Ids
#------------------------------------------------------------------------------------------------------------------
#androidc1367075972                  user.name                      2020-03-26 17:33 ( 34 days ago)  No
#androidc1367075972                  user.name@zimbra.example.com   2020-04-29 19:39 (  0 days ago)  No

while (<$zpush_fd>) {
	next if /^\s*$/;
	next if /^\s*-+\s*$/;
	next if /^Device id/;
	next if /^All known devices and users/;
	# we have now skipped all useless headers

	my ($deviceid, $account, $last_date, $last_time, $junk) = split ' ', $_, 5;

	if ($account !~ /@/ and defined $DEFAULT_DOMAIN) { $account .= '@' . $DEFAULT_DOMAIN; }
	my $timestamp = get_timestamp_zpush ($last_date, $last_time);
	my $localtime = localtime($timestamp);
	$DEBUG > 1 && print "zpush:\t$last_date $last_time ($timestamp = $localtime)\t$account\n";
	$USERS{$account} = $timestamp if not defined $USERS{$account} or $timestamp > $USERS{$account};	# use latest timestamp only
}
close $zpush_fd;

#
# produce final report
#

my $now = time;
foreach my $account (sort { $USERS{$a} <=> $USERS {$b} } keys %USERS) {
	next if $IGN_USERS{$account};

	my $timestamp = $USERS{$account};
	my $localtime = localtime($timestamp);
	$DEBUG && print "last:\t$timestamp ($localtime)\t$account\n";

	my $diff = $now - $timestamp;
	if ($diff > $MAX_DAYS*24*60*60) {
		my $diff_days = int($diff/24/60/60);
		print "$account too old ($diff_days > $MAX_DAYS days) - last used $localtime ($timestamp)\n";
	}
}
